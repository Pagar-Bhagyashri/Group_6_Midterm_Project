{
	"name": "Load_Fact_Persons",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Snowflake_DIM_PERSONS",
						"type": "DatasetReference"
					},
					"name": "SrcDimPersons"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeDimTitlesDF",
						"type": "DatasetReference"
					},
					"name": "SrcDimTItles"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeDim_profession_DF",
						"type": "DatasetReference"
					},
					"name": "SrcDimProfession"
				},
				{
					"dataset": {
						"referenceName": "StagingTitlePrinciples",
						"type": "DatasetReference"
					},
					"name": "SrcTitlePrinciples"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Snowflake_Fact_Person",
						"type": "DatasetReference"
					},
					"name": "LoadFactPerson"
				}
			],
			"transformations": [
				{
					"name": "LookUpDimPersons"
				},
				{
					"name": "lookupDimTitles"
				},
				{
					"name": "lookupDimProfessions"
				},
				{
					"name": "COlumnTransformation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PERSON_SK as decimal(20,0),",
				"          NCONST as string,",
				"          PRIMARY_NAME as string,",
				"          BIRTH_YEAR as decimal(4,0),",
				"          DEATH_YEAR as decimal(4,0),",
				"          KNOWN_TITLE as string,",
				"          IS_CURRENT as decimal(2,0),",
				"          START_DATE as date,",
				"          END_DATE as date,",
				"          PERSON_DK as string,",
				"          JOB_ID as string,",
				"          LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> SrcDimPersons",
				"source(output(",
				"          TITLE_SK as decimal(22,0),",
				"          TCONST as string,",
				"          PRIMARY_TITLE as string,",
				"          ORIGINAL_TITLE as string,",
				"          TITLE_TYPE as string,",
				"          IS_ADULT as decimal(2,0),",
				"          JOB_ID as string,",
				"          LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> SrcDimTItles",
				"source(output(",
				"          PROFESSION_SK as decimal(20,0),",
				"          PROFESSION_NAME as string,",
				"          IS_CURRENT as decimal(2,0),",
				"          START_DATE as date,",
				"          END_DATE as date,",
				"          PROFESSION_DK as string,",
				"          JOB_ID as string,",
				"          LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> SrcDimProfession",
				"source(output(",
				"          TCONST as string,",
				"          ORDERING as decimal(5,0),",
				"          NCONST as string,",
				"          CATEGORY as string,",
				"          JOB as string,",
				"          CHARACTERS as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> SrcTitlePrinciples",
				"SrcTitlePrinciples, SrcDimPersons lookup(SrcTitlePrinciples@NCONST == SrcDimPersons@NCONST,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(SrcDimPersons@NCONST, true),",
				"     broadcast: 'auto')~> LookUpDimPersons",
				"LookUpDimPersons, SrcDimTItles lookup(SrcTitlePrinciples@TCONST == SrcDimTItles@TCONST,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(SrcDimTItles@TCONST, true),",
				"     broadcast: 'auto')~> lookupDimTitles",
				"lookupDimTitles, SrcDimProfession lookup(JOB == PROFESSION_NAME,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupDimProfessions",
				"lookupDimProfessions derive(FACT_PERSON_SK = toString(sha1(SrcTitlePrinciples@NCONST + SrcTitlePrinciples@TCONST + CATEGORY + JOB))\r",
				"\r",
				",",
				"          DI_JOB_ID = uuid(),",
				"          DI_LOAD_DT = currentTimestamp()) ~> COlumnTransformation",
				"COlumnTransformation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FACT_PERSON_SK as string,",
				"          PERSON_SK as decimal(20,0),",
				"          CATEGORY as string,",
				"          JOB as string,",
				"          CHARACTER as string,",
				"          ORDERING as decimal(10,0),",
				"          TITLE_SK as decimal(20,0),",
				"          PROFESSION_SK as decimal(20,0),",
				"          JOB_ID as string,",
				"          LOAD_DT as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          FACT_PERSON_SK,",
				"          PERSON_SK,",
				"          CATEGORY,",
				"          JOB,",
				"          CHARACTER = CHARACTERS,",
				"          ORDERING,",
				"          TITLE_SK,",
				"          PROFESSION_SK,",
				"          JOB_ID = DI_JOB_ID,",
				"          LOAD_DT = DI_LOAD_DT",
				"     )) ~> LoadFactPerson"
			]
		}
	}
}